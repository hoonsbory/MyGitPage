{"version":3,"sources":["component/header.js","component/aboutMe.js","component/projectImg.js","component/project.js","component/SkillList.js","component/skills.js","component/contact.js","App.js","serviceWorker.js","index.js"],"names":["Header","useState","text","setText","text2","setText2","useEffect","count","content","inter","setInterval","length","clearInterval","document","getElementById","style","borderRight","inter2","a","className","href","onClick","window","scrollTo","scrollIntoView","background","process","alt","src","id","AboutMe","addEventListener","clientHeight","scrollY","marginTop","opacity","fontSize","backgroundImage","ProjectImg","project","map","x","idx","settings","customPaging","i","width","height","dots","dotsClass","infinite","speed","slidesToShow","slidesToScroll","forEach","getElementsByClassName","img","Image","onload","Project","scrollHeight","setProject","setLength","imageList","projectName","leng","arr","Array","fill","setTimeout","display","marginBottom","alert","SkillList","skillImg","skillName","star","value","size","gap","inactiveColor","Skills","Contact","onSubmit","e","preventDefault","emailjs","sendForm","target","then","result","error","type","name","required","onKeyUp","innerHTML","color","App","boxClick","cursor","zIndex","position","top","right","margin","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.fc5de893.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport '../css/header.scss';\r\nconst Header = () => {\r\n\r\n  const [text, setText] = useState(\"\")\r\n  const [text2, setText2] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    //componentDidMount에서는 setstate가 즉각 변경되면서 문자열이 잘더해졌는데, hooks를 사용하니 변경된 내용이 useEffect에서 바로 적용이 안된다.\r\n    //html태그에서는 state값이 변경되면서 잘찍히지만 useEffect내에서는 변경내용이 반영이 안된다. 이유는 모르겠음,,\r\n    var title = \"풀스택 개발자를 꿈꾸는\"\r\n    var title2 = \"신입개발자 신재훈입니다\"\r\n    var count = 0;\r\n    var content = \"\";\r\n    var inter = setInterval(() => {\r\n      content = content + title[count]\r\n      setText(content)\r\n      count++;\r\n      if (count === title.length) {\r\n        count = 0;\r\n        content = \"\";\r\n        clearInterval(inter);\r\n        document.getElementById(\"title\").style.borderRight = \"unset\"\r\n        var inter2 = setInterval(async () => {\r\n          content = content + title2[count]\r\n          setText2(content)\r\n          count++;\r\n          if (count === title2.length) {\r\n            clearInterval(inter2);\r\n          }\r\n        }, 150);\r\n      }\r\n    }, 150);\r\n\r\n  }, [])\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"mainSec-container\">\r\n        <a href=\"#!\" className=\"tab\" onClick={() => window.scrollTo(0, 0)}>Home</a>\r\n        <a href=\"#!\" className=\"tab\" onClick={() => document.getElementById(\"aboutMe\").scrollIntoView()}>AboutMe</a>\r\n        <a href=\"#!\" className=\"tab\" onClick={() => document.getElementById(\"project\").scrollIntoView()}>Project</a>\r\n        <a href=\"#!\" className=\"tab\" onClick={() => document.getElementById(\"skills\").scrollIntoView()}>Skills</a>\r\n        <a href=\"#!\" className=\"tab\" onClick={() => document.getElementById(\"contact\").scrollIntoView()}>Contact</a>\r\n        <span className=\"tab-slider\"></span>\r\n      </div>\r\n      <section className=\"mainSec\" style={{background : `url(${process.env.PUBLIC_URL}images/main.png)`}}>\r\n        <img alt=\"mypic\" src={`${process.env.PUBLIC_URL}images/memo.gif`} id=\"mypic\"></img>\r\n        <br></br>\r\n        <h1 id=\"title\">{text}</h1>\r\n        <br></br>\r\n        <h1 id=\"title2\">{text2}</h1>\r\n\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport '../css/aboutMe.scss';\r\n\r\nconst AboutMe = () => {\r\n    window.addEventListener('scroll', function () {\r\n        if (document.getElementById('aboutMe').clientHeight / 1.7 < window.scrollY) {\r\n            document.getElementById(\"aboutMe\").style.marginTop = \"0\"\r\n            document.getElementById(\"aboutMe\").style.opacity= 1\r\n        }\r\n    })\r\n    return (\r\n        <section className=\"slide\" id=\"aboutMe\">\r\n                <div className=\"titleDiv\">\r\n                    <h3 id=\"titleSub\"><span style={{ fontSize: \"1rem\" }}>AboutMe</span></h3>\r\n                </div>\r\n                <div id=\"left\">\r\n                    <div id=\"aboutmeCom\" style={{backgroundImage : `url(${process.env.PUBLIC_URL}images/com.png)`}}><p id=\"firstp\">함께할 때 더 빛나는</p> <p>같이의 가치를 아는 개발자</p></div>\r\n                </div>\r\n                <div id=\"right\">\r\n                    <div id=\"aboutmeText\"><div id=\"subTitle\"><h3>FullStack Developer</h3></div>\r\n                        <p><strong>기획부터 프론트,백엔드</strong>까지 관심이 많아 풀스택 개발자가 되는 것이 목표입니다.</p>\r\n                        <p>두루 실력을 갖춘 개발자를 넘어서, 함께 성장할 수 있는 <strong>좋은 팀원이자 친구</strong> 같은 개발자가 되려합니다.</p>\r\n                        <p>때로는 친구처럼, 때로는 듬직한 파트너로써</p>\r\n                        <p><strong>코드 그 이상의 가치</strong>를 공유할 수 있는 개발자가 되어 선한 영향력을 끼치고 싶습니다.</p>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n    )\r\n}\r\n\r\nexport default AboutMe\r\n","import Slider from \"react-slick\";\r\nimport React, { useEffect } from 'react'\r\n\r\nconst ProjectImg = ({ project, length }) => {\r\n    // var map = length.map((x,idx)=> <div><img alt=\"projectImg\" id={\"projectImg\"+idx} className=\"projectImg\" src={`https://hoonsbory.github.io/MyGitPage/images/${project}0${idx+1}.jpg`} /></div>)\r\n    var map = length.map((x, idx) => <div><img alt=\"projectImg\" className={\"projectImg\" + idx + \" projectImg\"} src={`${process.env.PUBLIC_URL}images/loading.svg`} /></div>)\r\n    const settings = {\r\n\r\n        customPaging: function (i) {\r\n            return (\r\n                <img alt=\"previewImg\" className={\"projectDockImg\" + i} src={`${process.env.PUBLIC_URL}images/loading.svg`} width=\"40px\" height=\"40px\" />\r\n            );\r\n        },\r\n        dots: true,\r\n        dotsClass: \"slick-dots slick-thumb\",\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1\r\n    };\r\n    useEffect(() => {\r\n        if (!project) return\r\n        //\r\n        length.forEach((i,idx)=>{\r\n            [...document.getElementsByClassName(\"projectImg\"+idx)].forEach(x=>{\r\n                x.src = `${process.env.PUBLIC_URL}images/loading.svg`\r\n                var img = new Image();\r\n                img.onload = function () {\r\n                    x.src = img.src\r\n                };\r\n                img.src = `${process.env.PUBLIC_URL}images/${project}0${idx+1}.jpg`\r\n            });\r\n\r\n            [...document.getElementsByClassName(\"projectDockImg\"+idx)].forEach(x=>{\r\n                x.src = `${process.env.PUBLIC_URL}images/loading.svg`\r\n                var img = new Image();\r\n                img.onload = function () {\r\n                    x.src = img.src\r\n                };\r\n                img.src = `${process.env.PUBLIC_URL}images/${project}0${idx+1}.jpg`\r\n            })\r\n\r\n            })\r\n    }, [project])\r\n \r\n    return (\r\n        <div id=\"projectImg\">\r\n            <Slider {...settings}>\r\n                {map}\r\n\r\n                {/* <div>\r\n                        <img alt=\"projectImg\" className=\"projectImg\" src={\"/MyGitPage/images/\" + project + \"01.jpg\"} />\r\n                    </div>\r\n                    <div>\r\n                        <img alt=\"projectImg\" className=\"projectImg\" src={\"/MyGitPage/images/\" + project + \"02.jpg\"} />\r\n                    </div>\r\n                    <div>\r\n                        <img alt=\"projectImg\" className=\"projectImg\" src={\"/MyGitPage/images/\" + project + \"03.jpg\"} />\r\n\r\n                    </div> */}\r\n            </Slider>\r\n        </div>\r\n    )\r\n}\r\nexport default ProjectImg\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport Slider from \"react-slick\";\r\nimport '../css/project.scss'\r\nimport ProjectImg from \"./projectImg\"\r\n\r\nconst Project = () => {\r\n  window.addEventListener('scroll', function () {\r\n    if (document.getElementById(\"aboutMe\").scrollHeight + 200 < window.scrollY) {\r\n      document.getElementById(\"project\").style.marginTop = 0\r\n      document.getElementById(\"project\").style.opacity = 1\r\n    }\r\n  })\r\n  const [project, setProject] = useState(\"\")\r\n  const [length, setLength] = useState([])\r\n\r\n  const imageList = (projectName, leng) => {\r\n    setProject(projectName)\r\n    var arr = new Array(leng)\r\n    arr.fill(0)\r\n    setLength([...arr])\r\n    setTimeout(() => {\r\n      document.getElementById(\"projectImg\").style.display = \"block\";\r\n      document.getElementById(\"opacityBox\").style.display = \"block\";\r\n      document.getElementById(\"close\").style.display = \"block\";\r\n      document.getElementsByClassName(\"mainSlide\")[0].getElementsByClassName(\"slick-arrow\")[0].style.display = \"none\";\r\n      document.getElementsByClassName(\"mainSlide\")[0].getElementsByClassName(\"slick-arrow\")[1].style.display = \"none\";\r\n    }, 50);\r\n  }\r\n\r\n  const settings = {\r\n    customPaging: function (i) {\r\n      return (\r\n        <img alt=\"previewImg\" src={`${process.env.PUBLIC_URL}images/projectMain0${8 - (i + 1)}.png`} width=\"40px\" height=\"40px\" />\r\n      );\r\n    },\r\n    dots: true,\r\n    dotsClass: \"slick-dots slick-thumb\",\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    className: \"mainSlide\"\r\n  };\r\n  return (\r\n    <section style={{ background: \"white\" }} className=\"slide\" id=\"project\">\r\n      <div className=\"titleDiv\" >\r\n        <h3 id=\"titleSub\"><span style={{ fontSize: \"1rem\" }}>Projects</span></h3>\r\n      </div>\r\n      <ProjectImg project={project} length={length}></ProjectImg>\r\n\r\n      <Slider {...settings} style={{ fontSize: \"15px\" }} >\r\n        <div className=\"slideDiv\">\r\n          <img alt=\"listBtnImg\" onClick={() => imageList(\"dodge\", 2)} src={`${process.env.PUBLIC_URL}images/interface.png`} className=\"imgList\"></img>\r\n          <img alt=\"projectImg\" className=\"projectImg\" src={`${process.env.PUBLIC_URL}images/projectMain07.png`}></img>\r\n          <div id=\"projectText\">\r\n            <p>\r\n              <strong>프로젝트명 </strong>- Dodge Game\r\n              </p>\r\n            <p>\r\n              <strong>사용기술 </strong>-\r\n              <span>JavaScript</span>\r\n              <span>Redux Pattern</span>\r\n              <span>Webpack</span>\r\n              <span>Babel</span>\r\n            </p>\r\n            <p>\r\n              <strong>역할</strong>- 전체기획 및 개발\r\n              </p>\r\n            <div style={{ marginBottom: \"0\" }}>\r\n              <strong>설명</strong> - 캔버스를 활용한 피하기 게임입니다.\r\n            <p>모듈화하여 코딩했으며, 전역상태관리는 redux 패턴을 이용했습니다.</p>\r\n              <p>PC에서는 키보드, Mobile에서는 터치를 사용하여 조작합니다.</p>\r\n              <p>총 5개의 아이템이 있으며, 점수가 올라갈 수록 적의 수가 증가하며 속도가 빨라집니다.</p>\r\n              <p>리사이즈 이벤트를 통하여 뷰포트 변화에 바로 반응하여 어떤 뷰포트에서도  Full-Size로 게임을 즐길 수 있습니다.</p>\r\n                webpack에서 babel-loader를 사용하여 es5문법으로 트랜스파일링하여 브라우저 호환성을 높였습니다.\r\n            <p>webpack을 활용하여 개발환경과 배포환경을 구분하여 자동화했습니다.</p>\r\n            </div>\r\n            <p style={{ display: \"inline\" }}>\r\n              <strong>깃허브 & 웹사이트</strong> -\r\n              </p>\r\n            <a onClick={() => alert(\"코드는 비밀입니다.\")}>\r\n              <img alt=\"githubImg\" src={`${process.env.PUBLIC_URL}images/github.png`}></img>\r\n            </a>\r\n            <p id=\"betweenP\" >&</p><a href=\"https://dodge-bit.netlify.app/\">\r\n              <img alt=\"siteImg\" src={`${process.env.PUBLIC_URL}images/center.png`}></img>\r\n            </a>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div className=\"slideDiv\">\r\n          <img alt=\"listBtnImg\" onClick={() => imageList(\"personalColor\", 5)} src={`${process.env.PUBLIC_URL}images/interface.png`} className=\"imgList\"></img>\r\n          <img alt=\"projectImg\" className=\"projectImg\" src={`${process.env.PUBLIC_URL}images/projectMain06.png`} />\r\n          <div id=\"projectText\">\r\n            <p>\r\n              <strong>프로젝트명 </strong>- 퍼스널컬러 진단(2인 프로젝트)\r\n              </p>\r\n            <p>\r\n              <strong>사용기술 </strong>-\r\n              <span>React</span>\r\n              <span>TypeScript</span>\r\n              <span>firebase</span>\r\n              <span>Heroku</span>\r\n              <span>AWS S3</span>\r\n              <span>CloudFront</span>\r\n              <span>Jenkins</span>\r\n              <span>Redux</span>\r\n              <span>tensorflowJS</span>\r\n              <span>NextJS</span>\r\n            </p>\r\n            <p>\r\n              <strong>역할</strong>- 기획 및 전체개발\r\n              </p>\r\n            <p style={{ marginBottom: \"0\" }}>\r\n              <strong>설명</strong> -카메라 및 사진으로 유저의 피부색을 추출하여 딥러닝 인공지능이 퍼스널컬러를 알려주는 웹사이트입니다.\r\n              </p>\r\n            <p>NextJS를 통한 SSR로 SEO에 최적화된 웹사이트입니다.</p>\r\n            <p>이미지 및 컴포넌트를 lazy load하여 트래픽 용량과 로딩속도를 개선했습니다.</p>\r\n            <p>video stream 사용을 지원하기 위해 미지원 인앱브라우저에서 접속 시 외부브라우저로 연결하였으며,\r\n            특정 ios버전에서 사진이 회전되어 적용되는 현상을 EXIF라이브러리를 통해 회전도에 맞게 canvas를 회전하여 draw하여 크로스 브라우징 문제를 해결하였습니다.\r\n            </p>\r\n            <p>\r\n              <strong>딥러닝 모델</strong>- 얼굴인식 라이브러리를 활용하여 얼굴이 1개만 인식되는 사진을 크롤링으로 자동 수집하였습니다.\r\n            전문가가 수집한 사진을 진단하여 firebase DB에 데이터를 넣는 사이트를 만들어 3차원 데이터를 수집하였습니다.\r\n            후에 데이터 전처리를 위해 수집한 데이터를 canvas로 시각화하여, 평균값과 맞지 않는 사진을 삭제하는 사이트를 만들었습니다.\r\n            최종적으로 모인 데이터를 딥러닝 분류 학습하여 모델을 만든 후 express로 api서버를 구축했습니다.</p>\r\n            <p style={{ display: \"inline\" }}>\r\n              <strong>깃허브 & 웹사이트</strong> -\r\n              </p>\r\n            <a onClick={() => alert(\"코드는 비밀입니다.\")}>\r\n              <img alt=\"githubImg\" src={`${process.env.PUBLIC_URL}images/github.png`}></img>\r\n            </a>\r\n            <p id=\"betweenP\" >&</p><a href=\"https://mycolor.kr\">\r\n              <img alt=\"siteImg\" src={`${process.env.PUBLIC_URL}images/mycolor.png`}></img>\r\n            </a>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div className=\"slideDiv\">\r\n          <img alt=\"listBtnImg\" onClick={() => imageList(\"lotto\", 4)} src={`${process.env.PUBLIC_URL}images/interface.png`} className=\"imgList\"></img>\r\n          <img alt=\"projectImg\" className=\"projectImg\" src={`${process.env.PUBLIC_URL}images/projectMain05.png`}></img>\r\n          <div id=\"projectText\">\r\n            <p>\r\n              <strong>프로젝트명 </strong>- 로또맛집(가상로또 및 통계)\r\n              </p>\r\n            <p>\r\n              <strong>사용기술 </strong>-\r\n              <span>React</span>\r\n              <span>Redux</span>\r\n              <span>TypeScript</span>\r\n              <span>Styled-Component</span>\r\n              <span>Graphql</span>\r\n              <span>MongoDB</span>\r\n              <span>Express</span>\r\n              <span>Heroku</span>\r\n            </p>\r\n            <p>\r\n              <strong>역할</strong>- 전체기획 및 개발\r\n              </p>\r\n            <div style={{ marginBottom: \"0\" }}>\r\n              <strong>설명</strong> - 가상로또 추첨과 로또 데이터를 가공한 그래프를 제공하는 웹사이트입니다.\r\n            <p>State관리는 Redux로 했으며, 재활용성이 높은 컴포넌트 등은 styled component로 커스텀하여 확장성을 높였습니다. </p>\r\n              <p>서버는 Graphql-yoga에 내장되어 있는 Express를 사용했습니다. MongoDB의 Schema를 Graphql에 정의하여  함께 사용했습니다.</p>\r\n              <p>실제 로또 데이터 수집은 node-cron과 cheerio를 활용하여 크롤링했고, 수집한 데이터는 ChartJS를 커스텀하여 시각화했습니다. </p>\r\n            모바일 친화적으로 설계했으며 리스트가 있는 섹션은 스크롤 페이징 처리했습니다.\r\n            <p>웹뷰앱으로 출시했으며, 별도로 QR코드 스캔 기능을 추가했습니다.</p>\r\n            </div>\r\n            <p style={{ display: \"inline\" }}>\r\n              <strong>깃허브 & 웹사이트</strong> -\r\n              </p>\r\n            <a onClick={() => alert(\"코드는 비밀입니다.\")}>\r\n              <img alt=\"githubImg\" src={`${process.env.PUBLIC_URL}images/github.png`}></img>(Front) /\r\n            </a>\r\n            <a onClick={() => alert(\"코드는 비밀입니다.\")}>\r\n              <img alt=\"githubImg\" src={`${process.env.PUBLIC_URL}images/github.png`}></img>(Back)\r\n            </a>\r\n            <p id=\"betweenP\" >&</p><a href=\"https://lottozip.site\">\r\n              <img alt=\"siteImg\" src={`${process.env.PUBLIC_URL}images/lottoIcon.svg`}></img>\r\n            </a>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div className=\"slideDiv\">\r\n          <img alt=\"listBtnImg\" onClick={() => imageList(\"board\", 5)} src={`${process.env.PUBLIC_URL}images/interface.png`} className=\"imgList\"></img>\r\n          <img alt=\"projectImg\" className=\"projectImg\" src={`${process.env.PUBLIC_URL}images/projectMain04.png`}></img>\r\n          <div id=\"projectText\">\r\n            <p>\r\n              <strong>프로젝트명 </strong>- SPA 게시판\r\n              </p>\r\n            <p>\r\n              <strong>사용기술 </strong>-\r\n              <span>Express</span>\r\n              <span>React</span>\r\n              <span>AWS S3</span>\r\n              <span>AWS EC2</span>\r\n              <span>Nginx</span>\r\n              <span>Mysql</span>\r\n              <span>Sequelize</span>\r\n              <span>Redux</span>\r\n              <span>Passport</span>\r\n            </p>\r\n            <p>\r\n              <strong>역할</strong>- 전체기획 및 개발\r\n              </p>\r\n            <p style={{ marginBottom: \"0\" }}>\r\n              <strong>설명</strong> - 전체적인 기능이 담겨있는 SPA 게시판입니다. <br></br>\r\n          로그인, 좋아요, 댓글, 댓글 좋아요, 답글 등등 기본적인 기능을 모두 갖추었습니다.</p>\r\n            <p>특히 사진업로드 같은 경우 직접 커스텀해서 커서가 어떤 위치에 놓여도 완벽하게 대응하며, 불필요한 s3 요청이 없게 로직을 짰습니다.</p>\r\n            <p>코드블럭은 highlight.js를 통해 구현했고, 깊이우선탐색 알고리즘을 사용하여 실시간으로 코드블럭을 적용시켰습니다.<br></br> \r\n            모바일은 무한스크롤, pc는 숫자로 페이징했습니다. 모바일의 무한스크롤은 react-virtualized를 통해서 속도를 높였습니다.</p>\r\n            <p>SEO 최적화를 위해 REACT HELMET을 사용했고 게시글 페이지만 서버에서 메타태그를 변경하게 했습니다.</p>\r\n            <p>Nginx를 통해 로드밸런싱을 구현했고, http 요청은 https로 Redirect 시켰습니다.</p>\r\n            <p style={{ display: \"inline\" }}>\r\n              <strong>깃허브 & 웹사이트</strong> -\r\n              </p>\r\n            <a onClick={() => alert(\"코드는 비밀입니다.\")}>\r\n              <img alt=\"githubImg\" src={`${process.env.PUBLIC_URL}images/github.png`}></img>\r\n            </a><p id=\"betweenP\" >&</p><a href=\"https://hoondevnote.ml\">\r\n              <img alt=\"siteImg\" src={`${process.env.PUBLIC_URL}images/board.png`}></img>\r\n            </a>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div className=\"slideDiv\">\r\n          <img alt=\"listBtnImg\" onClick={() => imageList(\"mask\", 3)} src={`${process.env.PUBLIC_URL}images/interface.png`} className=\"imgList\"></img>\r\n          <img alt=\"projectImg\" className=\"projectImg\" src={`${process.env.PUBLIC_URL}images/projectMain03.png`}></img>\r\n          <div id=\"projectText\">\r\n            <p>\r\n              <strong>프로젝트명 </strong>- 마스크팜(2인 프로젝트)\r\n              </p>\r\n            <p>\r\n              <strong>사용기술 </strong>-\r\n              <span>SpringBoot</span>\r\n              <span>MySql</span>\r\n              <span>AWS</span>\r\n              <span>Docker</span>\r\n              <span>Thymeleaf</span>\r\n              <span>JPA</span>\r\n              <span>Nginx</span>\r\n              <span>Travis CI</span>\r\n              <span>JQuery</span>\r\n            </p>\r\n            <p>\r\n              <strong>역할</strong>- 전체기획 및 개발\r\n              </p>\r\n            <p style={{ marginBottom: \"0\" }}>\r\n              <strong>설명</strong> -서버에서 받은 공공데이터를 축적 및 가공하여 공적마스크의 평균 입고\r\n          시간을 제공하며 거리순 입고순 정렬을 통해 편리한 재고 검색이 가능하게 했습니다. </p><br></br>\r\n            <p>Nginx를 통해 도커 컨테이너 2개를 로드밸런싱해주었습니다.</p>\r\n            <p>Travis CI를 통해 빌드 후 s3에 업로드하고, aws code deploy를 통해 ec2에 배포하는 파이프라인을 구축했습니다.</p>\r\n            <p>사용자가 끊김없이 이용할 수 있게 배포 시 쉘스크립트를 통해 컨테이너를 하나씩 재실행시켰습니다.</p>\r\n            <p>crontab을 이용하여 매일 새벽 data를 수집하여 평균 입고 시간을 계산 후 DB에 insert해주어 더 편하게 입고시간을 알 수 있습니다.</p>\r\n            <p>※ 7월 12일부로 공적마스크 제도가 종료되어 더 이상 api를 통해 데이터를 받아오지 않습니다.</p>\r\n            <p style={{ display: \"inline\" }}>\r\n              <strong>깃허브 & 웹사이트</strong> -\r\n              </p>\r\n            <a onClick={() => alert(\"코드는 비밀입니다.\")}>\r\n              <img alt=\"githubImg\" src={`${process.env.PUBLIC_URL}images/github.png`}></img>\r\n            </a><p id=\"betweenP\" >&</p><a href=\"https://mask-pharm.shop\">\r\n              <img alt=\"siteImg\" src={`${process.env.PUBLIC_URL}images/favicon.png`}></img>\r\n            </a>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"slideDiv\">\r\n          <img alt=\"listBtnImg\" onClick={() => imageList(\"dayoff\", 3)} src={`${process.env.PUBLIC_URL}images/interface.png`} className=\"imgList\"></img>\r\n          <img alt=\"projectImg\" className=\"projectImg\" src={`${process.env.PUBLIC_URL}images/projectMain02.png`} />\r\n          <div id=\"projectText\">\r\n            <p>\r\n              <strong>프로젝트명 </strong>- DayOff(5인 프로젝트)\r\n              </p>\r\n            <p>\r\n              <strong>사용기술 </strong>-\r\n              <span>SpringBoot</span>\r\n              <span>MySql</span>\r\n              <span>AWS</span>\r\n              <span>React</span>\r\n              <span>SpringSecurity</span>\r\n              <span>JPA</span>\r\n              <span>GCP(Storage,visionApi)</span>\r\n              <span>Nginx</span>\r\n            </p>\r\n            <p>\r\n              <strong>역할</strong>- SpringSecurity Login(Oauth2-Google,Facebook),DB설계 및 Entity Mapping, 결제관리(admin,user),최근 본 상품 및 조회중인 상품과 구매연결이 높은 제품 추천, Vision Api(인공지능)와 Storage를 활용한 유사 상품 검색,kakao Pay(환불),서버 배포 및 https 적용(이 부분은 프로젝트 종료 후 혼자 진행한 부분입니다.)</p>\r\n            <p style={{ marginBottom: \"0\" }}>\r\n              <strong>설명</strong> -여성의류 쇼핑몰로 최대한 많은 부분을 구현하려 했고, 차별화를 주기 위하여 인공지능 상품검색 기능을 추가하였습니다.\r\n          </p>\r\n            <p style={{ display: \"inline\" }}>\r\n              <strong>깃허브 & 웹사이트</strong> -\r\n              </p>\r\n            <a onClick={() => alert(\"코드는 비밀입니다.\")}>\r\n              <img alt=\"githubImg\" src={`${process.env.PUBLIC_URL}images/github.png`}></img>\r\n            </a>\r\n            <p id=\"betweenP\" >&</p><a href=\"https://jaehoon-dayoff.ml\">\r\n              <img alt=\"siteImg\" src={`${process.env.PUBLIC_URL}images/dayoff.png`}></img>\r\n            </a>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"slideDiv\">\r\n          <img alt=\"listBtnImg\" onClick={() => imageList(\"insta\", 3)} src={`${process.env.PUBLIC_URL}images/interface.png`} className=\"imgList\"></img>\r\n          <img alt=\"projectImg\" className=\"projectImg\" src={`${process.env.PUBLIC_URL}images/projectMain01.png`} />\r\n          <div id=\"projectText\">\r\n            <p>\r\n              <strong>프로젝트명 </strong>- 인스타그램 클론(5인 프로젝트)\r\n              </p>\r\n            <p>\r\n              <strong>사용기술 </strong>-\r\n              <span>JSP</span>\r\n              <span>ORACLE DB</span>\r\n              <span>Tomcat</span>\r\n              <span>Servlet</span>\r\n            </p>\r\n            <p>\r\n              <strong>역할</strong>- 게시글 등록, 본인페이지,타유저페이지, DB설계, 좋아요 팔로우 내역, 팔로우 및 팔로워 리스트, 사용자검색,로그인 CSS</p>\r\n            <p style={{ marginBottom: \"0\" }}>\r\n              <strong>설명</strong> -학원에서 처음 JDBC와 JSP,AJAX를 배웠을 당시 진행한 미니 프로젝트로 인스타그램을 클론했습니다.\r\n          </p>\r\n            <p style={{ display: \"inline\" }}>\r\n              <strong>깃허브 </strong> -\r\n              </p>\r\n            <a onClick={() => alert(\"코드는 비밀입니다.\")}>\r\n              <img alt=\"githubImg\" src={`${process.env.PUBLIC_URL}images/github.png`}></img>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </Slider>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Project\r\n","import React from 'react'\r\nimport BeautyStars from 'beauty-stars';\r\n\r\nconst SkillList = ({skillImg, skillName, star}) => {\r\n    return (\r\n        <div className=\"imgDiv\">\r\n            <img alt=\"skillImg\" src={`${process.env.PUBLIC_URL}images/${skillImg}`}></img>\r\n            <p>{skillName}</p>\r\n            <BeautyStars\r\n                value={star}\r\n                size={\"10px\"}\r\n                gap={\"5px\"}\r\n                inactiveColor={\"gray\"}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default SkillList","import \"../css/skills.scss\"\r\nimport SkillList from './SkillList';\r\nimport React from 'react'\r\n\r\nconst Skills = () => {\r\n    window.addEventListener('scroll', function () {\r\n        if (document.getElementById(\"aboutMe\").scrollHeight + document.getElementById(\"project\").scrollHeight + 200 < window.scrollY) {\r\n            document.getElementById(\"skills\").style.marginTop = 0\r\n            document.getElementById(\"skills\").style.opacity = 1\r\n        }\r\n    })\r\n    return (\r\n        <section className=\"slide\" id=\"skills\">\r\n                <div className=\"skillDiv\">\r\n                    <h1>Skills</h1>\r\n                    <h3 id=\"skillSub\"><span>Back-end</span></h3>\r\n\r\n                    <SkillList skillName=\"JAVA\" star=\"2\" skillImg=\"java.png\" />\r\n\r\n                    <SkillList skillName=\"NODE EXPRESS\" star=\"2\" skillImg=\"node.png\" />\r\n\r\n                    <SkillList skillName=\"JPA\" star=\"2\" skillImg=\"jpa.png\" />\r\n\r\n                    <SkillList skillName=\"SpringBoot\" star=\"2\" skillImg=\"spring.png\" />\r\n\r\n                    <SkillList skillName=\"Nginx\" star=\"2\" skillImg=\"nginx.png\" />\r\n                </div>\r\n                <div className=\"skillDiv\">\r\n                    <h3 id=\"skillSub\"><span>Front-end</span></h3>\r\n\r\n                    <SkillList skillName=\"CSS\" star=\"2\" skillImg=\"css.png\" />\r\n\r\n                    <SkillList skillName=\"html\" star=\"3\" skillImg=\"html5.png\" />\r\n\r\n                    <SkillList skillName=\"React\" star=\"3\" skillImg=\"react.png\" />\r\n\r\n                    <SkillList skillName=\"JavsScript\" star=\"3\" skillImg=\"js.png\" />\r\n\r\n                    <SkillList skillName=\"TypeScript\" star=\"2\" skillImg=\"ts.png\" />\r\n\r\n                    <SkillList skillName=\"Styled-Component\" star=\"2\" skillImg=\"styled.png\" />\r\n\r\n                    <SkillList skillName=\"Redux\" star=\"2\" skillImg=\"redux.png\" />\r\n\r\n                    <SkillList skillName=\"JQuery\" star=\"1\" skillImg=\"jquery.png\" />\r\n                </div>\r\n                <div className=\"skillDiv\">\r\n                    <h3 id=\"skillSub\"><span>ETC(DB,Tool...)</span></h3>\r\n\r\n                    <SkillList skillName=\"VScode\" star=\"3\" skillImg=\"vscode.png\" />\r\n\r\n                    <SkillList skillName=\"Travis CI\" star=\"2\" skillImg=\"travis.png\" />\r\n\r\n                    <SkillList skillName=\"Jenkins\" star=\"2\" skillImg=\"jenkins.png\" />\r\n\r\n                    <SkillList skillName=\"Docker\" star=\"1\" skillImg=\"docker.png\" />\r\n\r\n                    <SkillList skillName=\"Github\" star=\"3\" skillImg=\"github.png\" />\r\n\r\n                    <SkillList skillName=\"MySql\" star=\"3\" skillImg=\"mysql.png\" />\r\n\r\n                    <SkillList skillName=\"AWS\" star=\"2\" skillImg=\"aws.png\" />\r\n\r\n                    <SkillList skillName=\"GCP\" star=\"1\" skillImg=\"gcp.png\" />\r\n                </div>\r\n            </section>\r\n    )\r\n}\r\nexport default Skills\r\n","import emailjs from \"emailjs-com\"\r\nimport '../css/contact.scss'\r\n\r\nimport React from 'react'\r\n\r\nconst Contact = () => {\r\n    window.addEventListener('scroll', function () {\r\n        if (document.getElementById(\"aboutMe\").scrollHeight + document.getElementById(\"project\").scrollHeight + document.getElementById(\"skills\").scrollHeight + 200 < window.scrollY) {\r\n            document.getElementById(\"contact\").style.marginTop = 0\r\n            document.getElementById(\"contact\").style.opacity = 1\r\n        }\r\n    })\r\n    const sendEmail = (e) => {\r\n        e.preventDefault();\r\n        if (document.getElementById(\"message\").value.length > 600) {\r\n            alert(\"글자 수가 초과되었습니다..\");\r\n            return;\r\n        }\r\n\r\n        emailjs.sendForm('tonymkcv', 'template_3YUmNpTi', e.target, 'user_tbMVZhZNhbJbK8s6CoGH3')\r\n            .then((result) => {\r\n                alert(\"성공적으로 전송되었습니다!\")\r\n            }, (error) => {\r\n                alert(\"전송에 실패했습니다.\")\r\n            });\r\n    }\r\n    const keyUp = () => {\r\n        var content;\r\n        content = document.getElementById(\"message\").value;\r\n\r\n        if (content.length > 600) {\r\n            document.getElementById(\"countSpan\").innerHTML = content.length;\r\n            document.getElementById(\"countSpan\").style.color = \"red\";\r\n        } else {\r\n            document.getElementById(\"countSpan\").innerHTML = content.length;\r\n            document.getElementById(\"countSpan\").style.color = \"black\";\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <section className=\"slide\" id=\"contact\" style={{ marginBottom: '70px'}}>\r\n                <div className=\"titleDiv\">\r\n                    <h3 id=\"titleSub\"><span style={{ fontSize: \"1rem\" }}>Contact</span></h3>\r\n                </div>\r\n                <form className=\"contact-form\" onSubmit={sendEmail}>\r\n                    <input type=\"hidden\" name=\"contact_number\" />\r\n                    <label>이름</label>\r\n                    <input required=\"required\" type=\"text\" name=\"user_name\" />\r\n                    <label>이메일</label>\r\n                    <input type=\"email\" name=\"user_email\" />\r\n                    <label>내용</label>\r\n                    <textarea required=\"required\" id=\"message\" name=\"message\" onKeyUp={keyUp} />\r\n                    <div id=\"countword\" style={{ fontSize: \"0.6rem\" }}>글자 수 <span id=\"countSpan\">0</span>/600</div>\r\n                    <input id=\"submitbtn\" type=\"submit\" value=\"보내기\" />\r\n\r\n                </form>\r\n\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\nexport default Contact","import React from 'react';\r\nimport './App.css';\r\nimport Header from './component/header';\r\nimport AboutMe from './component/aboutMe'\r\nimport Project from './component/project'\r\nimport Skills from './component/skills'\r\nimport Contact from './component/contact';\r\n\r\n\r\nfunction App() {\r\n  window.scrollTo(0,0)\r\n  function boxClick(){\r\n    document.getElementById(\"opacityBox\").style.display = \"none\";\r\n    document.getElementById(\"projectImg\").style.display = \"none\";\r\n    document.getElementById(\"close\").style.display = \"none\";\r\n    document.getElementsByClassName(\"mainSlide\")[0].getElementsByClassName(\"slick-arrow\")[0].style.display = \"block\";\r\n      document.getElementsByClassName(\"mainSlide\")[0].getElementsByClassName(\"slick-arrow\")[1].style.display = \"block\";\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <div id=\"opacityBox\" onClick={()=> boxClick()}> </div>\r\n      <p id=\"close\" onClick={()=>boxClick()} \r\n      style={{cursor : \"pointer\", zIndex : \"999\",display : \"none\",color : \"white\", position : \"fixed\", top : 0, right : \"20px\", margin : 0, fontSize : \"3rem\"}}>x</p>\r\n      <Header></Header>\r\n      <AboutMe></AboutMe>\r\n      <Project></Project>\r\n      <Skills></Skills>\r\n      <Contact></Contact>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing mainSec open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client mainSec are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'mainSec for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import 'core-js/stable';\r\nimport 'regenerator-runtime/runtime';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/ie9';\r\nimport 'react-app-polyfill/stable';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"slick-carousel/slick/slick.css\"; \r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}