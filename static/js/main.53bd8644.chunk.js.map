{"version":3,"sources":["logo.svg","component/header.js","component/aboutMe.js","component/project.js","component/skills.js","component/contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","header","state","text","text2","count","count2","inter","setInterval","setState","length","clearInterval","document","getElementById","style","borderRight","inter2","className","id","src","process","this","onClick","window","scrollTo","scrollIntoView","Component","aboutMe","addEventListener","scrollY","display","animation","project","settings","customPaging","i","width","height","dots","dotsClass","infinite","speed","slidesToShow","slidesToScroll","console","log","getElementsByClassName","background","textAlign","paddingLeft","skills","contact","marginBottom","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.53bd8644.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\r\nimport '../css/header.css';\r\n\r\n\r\nexport default class header extends Component {\r\n  state = {\r\n    text : \"\",\r\n    text2 : \"\"\r\n  }\r\n  async componentDidMount(){\r\n    var title = \"풀스택 개발자를 꿈꾸는\"\r\n    var title2 = \"신입개발자 신재훈입니다\"\r\n    var count = 0;\r\n    var count2 = 0;\r\n    var inter =  setInterval(() => {\r\n      this.setState({\r\n        text : this.state.text + title[count]\r\n      })\r\n      count++;\r\n      if(count==title.length){\r\n        clearInterval(inter);\r\n        document.getElementById(\"title\").style.borderRight = \"unset\"\r\n        var inter2 = setInterval(() => {\r\n          this.setState({\r\n            text2 : this.state.text2 + title2[count2]\r\n          })\r\n          count2++;\r\n          if(count2==title2.length){\r\n            clearInterval(inter2);\r\n          }\r\n        }, 150);\r\n      }\r\n    }, 150);\r\n      \r\n  }\r\n  render(){\r\n\r\n  //   document.addEventListener('scroll', function() {\r\n  //     console.log(document.getElementsByClassName(\"et-hero-tabs\")[0].scrollHeight);\r\n  //     if(window.scrollY>=document.getElementsByClassName(\"et-hero-tabs\")[0].scrollHeight-document.getElementsByClassName(\"et-hero-tabs-container\")[0].scrollHeight&&document.getElementsByClassName(\"et-hero-tabs-container\")[0]){\r\n  //       document.getElementsByClassName(\"et-hero-tabs-container\")[0].setAttribute(\"class\",\"et-hero-tabs-container et-hero-tabs-container--top\")\r\n  //     }else{\r\n  //       document.getElementsByClassName(\"et-hero-tabs-container\")[0].setAttribute(\"class\",\"et-hero-tabs-container\");\r\n  //     }\r\n  // });\r\n  \r\n    return (\r\n      <div className=\"header\">\r\n        <section id=\"fuck\" className=\"et-hero-tabs\">\r\n          <img src={process.env.PUBLIC_URL + \"/images/me.png\"} id=\"mypic\"></img>\r\n          <br></br>\r\n    <h1 id=\"title\">{this.state.text}</h1>\r\n    <br></br>\r\n    <h1 id=\"title2\">{this.state.text2}</h1>\r\n          <div className=\"et-hero-tabs-container\">\r\n            <a className=\"et-hero-tab\" onClick={() => window.scrollTo(0, 0)}>Home</a>\r\n            <a className=\"et-hero-tab\" onClick={() => document.getElementById(\"aboutMe\").scrollIntoView()}>AboutMe</a>\r\n            <a className=\"et-hero-tab\" onClick={() => document.getElementById(\"project\").scrollIntoView()}>Project</a>\r\n            <a className=\"et-hero-tab\" onClick={() => document.getElementById(\"skills\").scrollIntoView()}>Skills</a>\r\n            <a className=\"et-hero-tab\" onClick={() => document.getElementById(\"contact\").scrollIntoView()}>Contact</a>\r\n            <span className=\"et-hero-tab-slider\"></span>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport '../css/aboutMe.css';\r\nimport styled, { createGlobalStyle, keyframes, css } from \"styled-components\";\r\nexport default class aboutMe extends Component {\r\n    render() {\r\n        var keyframe = \r\n        window.addEventListener('scroll', function () {\r\n            if (200 < this.window.scrollY) {\r\n                this.document.getElementById(\"aboutmeCom\").style.display = \"block\";\r\n                this.document.getElementById(\"aboutmeCom\").style.animation = \"fadein2 1s\"\r\n                this.document.getElementById(\"aboutmeText\").style.display = \"block\";\r\n                this.document.getElementById(\"aboutmeText\").style.animation = \"fadein2 1s\"\r\n            }\r\n        })\r\n        return (\r\n            <section className=\"et-slide\" id=\"aboutMe\">\r\n                <div id=\"aboutmeCom\"><p id=\"firstp\">누구나 함께하고싶은</p> <p>사람냄새나는 개발자</p></div>\r\n                <div id=\"aboutmeText\"><h1>About</h1><p>비전공자 출신으로 국비교육을 통해 웹개발을 배웠습니다. 잘하는 개발자를 넘어서 함께 멋진 결과를 만들어낼 수 있는 좋은 팀원이 되고 싶습니다. </p></div>\r\n                {/* <img src={process.env.PUBLIC_URL + \"/images/com.png\"} width=\"300vw\" height=\"200vh\"></img> */}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Slider from \"react-slick\";\r\nimport '../css/project.css'\r\n\r\nexport default class project extends Component {\r\n    render() {\r\n        const settings = {\r\n            customPaging: function(i) {\r\n              return (\r\n                  <img src={process.env.PUBLIC_URL+`/images/abstract0${i + 1}.jpg`} width=\"40px\" height=\"40px\" />\r\n              );\r\n            },\r\n            dots: true,\r\n            dotsClass: \"slick-dots slick-thumb\",\r\n            infinite: true,\r\n            speed: 500,\r\n            slidesToShow: 1,\r\n            slidesToScroll: 1\r\n          };\r\n          console.log(document.getElementsByClassName(\"slick-dots\")[0]);\r\n        return (\r\n            <section className=\"et-slide\" id=\"project\">\r\n                <Slider {...settings} >\r\n          <div>\r\n            <img style={{display : \"inline\"}} src={process.env.PUBLIC_URL + \"/images/abstract01.jpg\"} width=\"300px\"/>\r\n            <div style={{background: \"white\", display : 'inline-block', textAlign : \"left\", paddingLeft : \"3%\"}}><p>프로젝트명 : 마스크팜</p><p>제작기간 : 2020/03/01~2020/03/08</p><p>사용기술 : SpringBoot/Mysql/Docker/AWS/JPA/Thymeleaf</p><p>힘든 시기에 도움이 되고 싶어 제작함</p><br></br><br></br><br></br><br></br></div>\r\n          </div>\r\n          <div>\r\n          </div>\r\n          <div>\r\n          </div>\r\n        </Slider>\r\n        </section>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class skills extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <section className=\"et-slide\" id=\"skills\">\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class contact extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <section className=\"et-slide\" id=\"contact\" style={{marginBottom : '70px'}}>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './component/header';\nimport AboutMe from './component/aboutMe'\nimport Project from './component/project'\nimport Skills from './component/skills'\nimport Contact from './component/contact';\n\nfunction App() {\n    \n  return (\n    <div className=\"App\">\n      <Header></Header>\n      <AboutMe></AboutMe>\n      <Project></Project>\n      <Skills></Skills>\n      <Contact></Contact>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"slick-carousel/slick/slick.css\"; \nimport \"slick-carousel/slick/slick-theme.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}