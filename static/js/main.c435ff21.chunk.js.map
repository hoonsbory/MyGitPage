{"version":3,"sources":["component/header.js","component/aboutMe.js","component/projectImg.js","component/project.js","component/SkillList.js","component/skills.js","component/contact.js","App.js","serviceWorker.js","index.js"],"names":["Header","useState","text","setText","text2","setText2","useEffect","count","content","inter","setInterval","length","clearInterval","document","getElementById","style","borderRight","inter2","a","className","href","onClick","window","scrollTo","scrollIntoView","alt","src","id","AboutMe","addEventListener","this","clientHeight","scrollY","innerWidth","visibility","animation","fontSize","ProjectImg","project","settings","customPaging","i","width","height","dots","dotsClass","infinite","speed","slidesToShow","slidesToScroll","map","x","idx","Project","setProject","setLength","imageList","projectName","leng","arr","Array","setTimeout","display","getElementsByClassName","background","marginBottom","SkillList","skillImg","skillName","star","value","size","gap","inactiveColor","Skills","Contact","scrollHeight","onSubmit","e","preventDefault","alert","emailjs","sendForm","target","then","result","error","type","name","required","onKeyUp","innerHTML","color","App","boxClick","cursor","zIndex","position","top","right","margin","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.c435ff21.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport '../css/header.scss';\r\nconst Header = () => {\r\n\r\n  const [text, setText] = useState(\"\")\r\n  const [text2, setText2] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    //componentDidMount에서는 setstate가 즉각 변경되면서 문자열이 잘더해졌는데, hooks를 사용하니 변경된 내용이 useEffect에서 바로 적용이 안된다.\r\n    //html태그에서는 state값이 변경되면서 잘찍히지만 useEffect내에서는 변경내용이 반영이 안된다. 이유는 모르겠음,,\r\n    var title = \"풀스택 개발자를 꿈꾸는\"\r\n    var title2 = \"신입개발자 신재훈입니다\"\r\n    var count = 0;\r\n    var content = \"\";\r\n    var inter = setInterval(() => {\r\n      content = content + title[count]\r\n      setText(content)\r\n      count++;\r\n      if (count === title.length) {\r\n        count = 0;\r\n        content = \"\";\r\n        clearInterval(inter);\r\n        document.getElementById(\"title\").style.borderRight = \"unset\"\r\n        var inter2 = setInterval(async () => {\r\n          content = content + title2[count]\r\n          setText2(content)\r\n          count++;\r\n          if (count === title2.length) {\r\n            clearInterval(inter2);\r\n          }\r\n        }, 150);\r\n      }\r\n    }, 150);\r\n\r\n  }, [])\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"mainSec-container\">\r\n        <a href=\"#!\" className=\"tab\" onClick={() => window.scrollTo(0, 0)}>Home</a>\r\n        <a href=\"#!\" className=\"tab\" onClick={() => document.getElementById(\"aboutMe\").scrollIntoView()}>AboutMe</a>\r\n        <a href=\"#!\" className=\"tab\" onClick={() => document.getElementById(\"project\").scrollIntoView()}>Project</a>\r\n        <a href=\"#!\" className=\"tab\" onClick={() => document.getElementById(\"skills\").scrollIntoView()}>Skills</a>\r\n        <a href=\"#!\" className=\"tab\" onClick={() => document.getElementById(\"contact\").scrollIntoView()}>Contact</a>\r\n        <span className=\"tab-slider\"></span>\r\n      </div>\r\n      <section className=\"mainSec\">\r\n        <img alt=\"mypic\" src=\"/MyGitPage/images/myFace.png\" id=\"mypic\"></img>\r\n        <br></br>\r\n        <h1 id=\"title\">{text}</h1>\r\n        <br></br>\r\n        <h1 id=\"title2\">{text2}</h1>\r\n\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport '../css/aboutMe.scss';\r\n\r\nconst AboutMe = () => {\r\n    window.addEventListener('scroll', function () {\r\n        if (this.document.getElementById('aboutMe').clientHeight / 1.7 < this.window.scrollY) {\r\n            if (this.window.innerWidth < 768) {\r\n                this.document.getElementById(\"left\").style.visibility = \"visible\";\r\n                this.document.getElementById(\"left\").style.animation = \"fadein3 1.5s\"\r\n                this.document.getElementById(\"right\").style.visibility = \"visible\";\r\n                this.document.getElementById(\"right\").style.animation = \"fadein3 1.5s\"\r\n            } else {\r\n                this.document.getElementById(\"left\").style.visibility = \"visible\";\r\n                this.document.getElementById(\"left\").style.animation = \"fadein2 1.5s\"\r\n                this.document.getElementById(\"right\").style.visibility = \"visible\";\r\n                this.document.getElementById(\"right\").style.animation = \"fadein2 1.5s\"\r\n            }\r\n        }\r\n    })\r\n    return (\r\n        <section className=\"slide\" id=\"aboutMe\">\r\n                <div className=\"titleDiv\">\r\n                    <h3 id=\"titleSub\"><span style={{ fontSize: \"1rem\" }}>AboutMe</span></h3>\r\n                </div>\r\n                <div id=\"left\">\r\n                    <div id=\"aboutmeCom\"><p id=\"firstp\">같이 일하고 싶은,</p> <p>같이 있고 싶은 개발자</p></div>\r\n                </div>\r\n                <div id=\"right\">\r\n                    <div id=\"aboutmeText\"><div id=\"subTitle\"><h3>함께 하고 싶은 사람</h3></div>\r\n                        <p><strong>기획부터 프론트,백엔드</strong>까지 관심이 많아 풀스택 개발자가 되는 것이 목표입니다.</p>\r\n                        <p>두루 실력을 갖춘 개발자를 넘어서, 함께 성장할 수 있는 <strong>좋은 팀원이자 친구</strong> 같은 개발자가 되려합니다.</p>\r\n                        <p>때로는 친구처럼, 때로는 듬직한 파트너로써</p>\r\n                        <p><strong>코드 그 이상의 가치</strong>를 공유할 수 있는 개발자가 되어 선한 영향력을 끼치고 싶습니다.</p>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n    )\r\n}\r\n\r\nexport default AboutMe\r\n","import Slider from \"react-slick\";\r\nimport React from 'react'\r\n\r\nconst ProjectImg = ({project,length}) =>  {\r\n        const settings = {\r\n\r\n            customPaging: function (i) {\r\n                return (\r\n                    <img alt=\"previewImg\" src={`/MyGitPage/images/${project}0${i + 1}.jpg`} width=\"40px\" height=\"40px\" />\r\n                );\r\n            },\r\n            dots: true,\r\n            dotsClass: \"slick-dots slick-thumb\",\r\n            infinite: true,\r\n            speed: 500,\r\n            slidesToShow: 1,\r\n            slidesToScroll: 1\r\n        };\r\n        var map = length.map((x,idx)=> <div><img alt=\"projectImg\" className=\"projectImg\" src={`/MyGitPage/images/${project}0${idx+1}.jpg`} /></div>)\r\n        \r\n    return (\r\n        <div id=\"projectImg\">\r\n                <Slider {...settings}>\r\n                    {map}\r\n                    {/* <div>\r\n                        <img alt=\"projectImg\" className=\"projectImg\" src={\"/MyGitPage/images/\" + project + \"01.jpg\"} />\r\n                    </div>\r\n                    <div>\r\n                        <img alt=\"projectImg\" className=\"projectImg\" src={\"/MyGitPage/images/\" + project + \"02.jpg\"} />\r\n                    </div>\r\n                    <div>\r\n                        <img alt=\"projectImg\" className=\"projectImg\" src={\"/MyGitPage/images/\" + project + \"03.jpg\"} />\r\n\r\n                    </div> */}\r\n                </Slider>\r\n            </div>\r\n    )\r\n}\r\nexport default ProjectImg\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport Slider from \"react-slick\";\r\nimport '../css/project.scss'\r\nimport ProjectImg from \"./projectImg\"\r\n\r\nconst Project = () => {\r\n\r\n  const [project, setProject] = useState(\"\")\r\n  const [length, setLength] = useState([])\r\n\r\n  const imageList = (projectName,leng) => {\r\n    setProject(projectName)\r\n    var arr = new Array(leng)\r\n    arr[leng-1] = 0;\r\n    setLength([...arr])\r\n    setTimeout(() => {\r\n      document.getElementById(\"projectImg\").style.display = \"block\";\r\n      document.getElementById(\"opacityBox\").style.display = \"block\";\r\n      document.getElementById(\"close\").style.display = \"block\";\r\n      document.getElementsByClassName(\"mainSlide\")[0].getElementsByClassName(\"slick-arrow\")[0].style.display = \"none\";\r\n      document.getElementsByClassName(\"mainSlide\")[0].getElementsByClassName(\"slick-arrow\")[1].style.display = \"none\";\r\n    }, 50);\r\n  }\r\n\r\n  const settings = {\r\n    customPaging: function (i) {\r\n      return (\r\n        <img alt=\"previewImg\" src={`/MyGitPage/images/abstract0${i + 1}.jpg`} width=\"40px\" height=\"40px\" />\r\n      );\r\n    },\r\n    dots: true,\r\n    dotsClass: \"slick-dots slick-thumb\",\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    className: \"mainSlide\"\r\n  };\r\n  return (\r\n    <section style={{ background: \"white\" }} className=\"slide\" id=\"project\">\r\n      <div className=\"titleDiv\" >\r\n        <h3 id=\"titleSub\"><span style={{ fontSize: \"1rem\" }}>Projects</span></h3>\r\n      </div>\r\n      <ProjectImg project={project} length={length}></ProjectImg>\r\n\r\n      <Slider {...settings} style={{ fontSize: \"15px\" }} >\r\n        <div>\r\n          <img alt=\"listBtnImg\" onClick={() => imageList(\"board\",3)} src={\"/MyGitPage/images/interface.png\"} className=\"imgList\"></img>\r\n          <img alt=\"projectImg\" className=\"projectImg\" src={\"/MyGitPage/images/abstract01.jpg\"}></img>\r\n          <div id=\"projectText\"><p><strong>프로젝트명 </strong>- SPA 게시판</p>\r\n            <p><strong>사용기술 </strong>- <span>Express</span><span>React</span><span>AWS S3</span><span>AWS EC2</span><span>Nginx</span><span>Mysql</span>\r\n              <span>Sequelize</span><span>Redux</span><span>Passport</span></p>\r\n            <p><strong>역할</strong>- 전체기획 및 개발</p>\r\n            <p style={{ marginBottom: \"0\" }}><strong>설명</strong> - 전체적인 기능이 담겨있는 SPA 게시판입니다. <br></br>\r\n          로그인, 좋아요, 댓글, 댓글 좋아요, 답글 등등 기본적인 기능을 모두 갖추었습니다.</p>\r\n            <p>특히 사진업로드 같은 경우 직접 커스텀해서 커서가 어떤 위치에 놓여도 완벽하게 대응하며, 불필요한 s3 요청이 없게 로직을 짰습니다.</p>\r\n            <p>코드블럭은 highlight.js를 통해 구현했고, 모바일은 무한스크롤, pc는 숫자로 페이징했습니다. 모바일의 무한스크롤은 react-virtualized를 통해서 속도를 높였습니다.</p>\r\n            <p>SEO 최적화를 위해 REACT HELMET을 사용했고 게시글 페이지만 서버에서 메타태그를 변경하게 했습니다.</p>\r\n            <p>Nginx를 통해 로드밸런싱을 구현했고, http 요청은 https로 Redirect 시켰습니다.</p>\r\n            <p style={{ display: \"inline\" }}><strong>깃허브 & 웹사이트</strong> -</p><a href=\"https://github.com/hoonsbory/hoonBoard\">\r\n              <img alt=\"githubImg\" src={\"/MyGitPage/images/github.png\"}></img>\r\n            </a><p id=\"betweenP\" >&</p><a href=\"https://hoondevnote.ml\">\r\n              <img alt=\"siteImg\" src={\"/MyGitPage/images/board.png\"}></img></a></div>\r\n        </div>\r\n        <div>\r\n          <img alt=\"listBtnImg\" onClick={() => imageList(\"lotto\",2)} src={\"/MyGitPage/images/interface.png\"} className=\"imgList\"></img>\r\n          <img alt=\"projectImg\" className=\"projectImg\" src={\"/MyGitPage/images/abstract02.jpg\"}></img>\r\n          <div id=\"projectText\"><p><strong>프로젝트명 </strong>- 로또추첨기(미니프로젝트)</p>\r\n            <p><strong>사용기술 </strong>- <span>React</span><span>Redux</span><span>TypeScript</span><span>Styled-Component</span></p>\r\n            <p><strong>역할</strong>- 전체기획 및 개발</p>\r\n            <p style={{ marginBottom: \"0\" }}><strong>설명</strong> - TypeScript와 Styled-Component를 공부하기 위해서 만든 로또추첨기입니다.</p>\r\n            <p style={{ display: \"inline\" }}><strong>깃허브 & 웹사이트</strong> -</p><a href=\"https://github.com/hoonsbory/lotto-ts-react\">\r\n              <img alt=\"githubImg\" src={\"/MyGitPage/images/github.png\"}></img>\r\n            </a><p id=\"betweenP\" >&</p><a href=\"https://hoonsbory.github.io/lotto-ts-react/\">\r\n              테스트 하러가기</a></div>\r\n        </div>\r\n        <div>\r\n          <img alt=\"listBtnImg\" onClick={() => imageList(\"mask\",3)} src={\"/MyGitPage/images/interface.png\"} className=\"imgList\"></img>\r\n          <img alt=\"projectImg\" className=\"projectImg\" src={\"/MyGitPage/images/abstract03.jpg\"}></img>\r\n          <div id=\"projectText\"><p><strong>프로젝트명 </strong>- 마스크팜(2인 프로젝트)</p>\r\n            <p><strong>사용기술 </strong>- <span>SpringBoot</span><span>MySql</span><span>AWS</span><span>Docker</span><span>Thymeleaf</span>\r\n              <span>JPA</span><span>Nginx</span><span>Travis CI</span></p>\r\n            <p><strong>역할</strong>- 전체기획 및 개발</p>\r\n            <p style={{ marginBottom: \"0\" }}><strong>설명</strong> -서버에서 받은 공공데이터를 축적 및 가공하여 공적마스크의 평균 입고\r\n          시간을 제공하며 거리순 입고순 정렬을 통해 편리한 재고 검색이 가능하게 했습니다. </p><br></br>\r\n            <p>Nginx를 통해 도커 컨테이너 2개를 로드밸런싱해주었습니다.</p>\r\n            <p>Travis CI를 통해 빌드 후 s3에 업로드하고, aws code deploy를 통해 ec2에 배포하는 파이프라인을 구축했습니다.</p>\r\n            <p>사용자가 끊김없이 이용할 수 있게 배포 시 쉘스크립트를 통해 컨테이너를 하나씩 재실행시켰습니다.</p>\r\n            <p>crontab을 이용하여 매일 새벽 data를 수집하여 평균 입고 시간을 계산 후 DB에 insert해주어 더 편하게 입고시간을 알 수 있습니다.</p>\r\n            <br></br>\r\n            <p>※ 7월 12일부로 공적마스크 제도가 종료되어 더 이상 api를 통해 데이터를 받아오지 않습니다.</p>\r\n            <p style={{ display: \"inline\" }}><strong>깃허브 & 웹사이트</strong> -</p><a href=\"https://github.com/hoonsbory/maskMap\">\r\n              <img alt=\"githubImg\" src={\"/MyGitPage/images/github.png\"}></img>\r\n            </a><p id=\"betweenP\" >&</p><a href=\"https://mask-pharm.shop\">\r\n              <img alt=\"siteImg\" src={\"/MyGitPage/images/favicon.png\"}></img></a></div>\r\n        </div>\r\n        <div>\r\n          <img alt=\"listBtnImg\" onClick={() => imageList(\"personalColor\",3)} src={\"/MyGitPage/images/interface.png\"} className=\"imgList\"></img>\r\n          <img alt=\"projectImg\" className=\"projectImg\" src={\"/MyGitPage/images/abstract04.jpg\"} />\r\n          <div id=\"projectText\"><p><strong>프로젝트명 </strong>- 퍼스널컬러 진단(2인 프로젝트)</p>\r\n            <p><strong>사용기술 </strong>- <span>React</span><span>AWS S3</span><span>CloudFront</span><span>Jenkins</span></p>\r\n            <p><strong>역할</strong>- 기획 및 전체개발</p>\r\n            <p style={{ marginBottom: \"0\" }}><strong>설명</strong> -비디오태그의 스트림을 이용해 유저의 피부를 캡쳐 및 분석하여 퍼스널컬러를 알려주는 웹사이트입니다. <br /> 스트림을 지원하지 않는 브라우저는 input으로 사진을 업로드 하게 하였고 피부를 정확히 특정하기 위해 캔버스를 이용하여 크롭툴을 만들었습니다.</p>\r\n            <p>SEO최적화를 위해 react-snap을 사용하여 html을 분리했습니다.</p>\r\n            <p style={{ display: \"inline\" }}><strong>깃허브 & 웹사이트</strong> -</p><a href=\"https://github.com/hoonsbory/simkong\">\r\n              <img alt=\"githubImg\" src={\"/MyGitPage/images/github.png\"}></img>\r\n            </a><p id=\"betweenP\" >&</p><a href=\"https://mycolor.kr\">\r\n              <img alt=\"siteImg\" src={\"/MyGitPage/images/mycolor.png\"}></img></a></div>\r\n        </div>\r\n        <div>\r\n          <img alt=\"listBtnImg\" onClick={() => imageList(\"dayoff\",3)} src={\"/MyGitPage/images/interface.png\"} className=\"imgList\"></img>\r\n          <img alt=\"projectImg\" className=\"projectImg\" src={\"/MyGitPage/images/abstract05.jpg\"} />\r\n          <div id=\"projectText\"><p><strong>프로젝트명 </strong>- DayOff(5인 프로젝트)</p>\r\n            <p><strong>사용기술 </strong>- <span>SpringBoot</span><span>MySql</span><span>AWS</span><span>React</span><span>SpringSecurity</span>\r\n              <span>JPA</span><span>GCP(Storage,visionApi)</span><span>Nginx</span></p>\r\n            <p><strong>역할</strong>- SpringSecurity Login(Oauth2-Google,Facebook),DB설계 및 Entity Mapping, 결제관리(admin,user),최근 본 상품 및 조회중인 상품과 구매연결이 높은 제품 추천, Vision Api(인공지능)와 Storage를 활용한 유사 상품 검색,kakao Pay(환불),서버 배포 및 https 적용(이 부분은 프로젝트 종료 후 혼자 진행한 부분입니다.)</p>\r\n            <p style={{ marginBottom: \"0\" }}><strong>설명</strong> -여성의류 쇼핑몰로 최대한 많은 부분을 구현하려 했고, 차별화를 주기 위하여 인공지능 상품검색 기능을 추가하였습니다.\r\n          </p>\r\n            <p style={{ display: \"inline\" }}><strong>깃허브 & 웹사이트</strong> -</p><a href=\"https://github.com/hoonsbory/dayoffProject\">\r\n              <img alt=\"githubImg\" src={\"/MyGitPage/images/github.png\"}></img>\r\n            </a><p id=\"betweenP\" >&</p><a href=\"https://jaehoon-dayoff.ml\">\r\n              <img alt=\"siteImg\" src={\"/MyGitPage/images/dayoff.png\"}></img></a></div>\r\n        </div>\r\n\r\n        <div>\r\n          <img alt=\"listBtnImg\" onClick={() => imageList(\"insta\",3)} src={\"/MyGitPage/images/interface.png\"} className=\"imgList\"></img>\r\n          <img alt=\"projectImg\" className=\"projectImg\" src={\"/MyGitPage/images/abstract06.jpg\"} />\r\n          <div id=\"projectText\"><p><strong>프로젝트명 </strong>- 인스타그램 클론(5인 프로젝트)</p>\r\n            <p><strong>사용기술 </strong>- <span>JSP</span><span>ORACLE DB</span><span>Tomcat</span><span>Servlet</span></p>\r\n            <p><strong>역할</strong>- 게시글 등록, 본인페이지,타유저페이지, DB설계, 좋아요 팔로우 내역, 팔로우 및 팔로워 리스트, 사용자검색,로그인 CSS</p>\r\n            <p style={{ marginBottom: \"0\" }}><strong>설명</strong> -학원에서 처음 JDBC와 JSP,AJAX를 배웠을 당시 진행한 미니 프로젝트로 인스타그램을 클론했습니다.\r\n          </p>\r\n            <p style={{ display: \"inline\" }}><strong>깃허브 </strong> -</p><a href=\"https://github.com/hoonsbory/instaProject\">\r\n              <img alt=\"githubImg\" src={\"/MyGitPage/images/github.png\"}></img>\r\n            </a></div>\r\n        </div>\r\n      </Slider>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Project\r\n","import React from 'react'\r\nimport BeautyStars from 'beauty-stars';\r\n\r\nconst SkillList = ({skillImg, skillName, star}) => {\r\n    return (\r\n        <div className=\"imgDiv\">\r\n            <img alt=\"skillImg\" src={\"/MyGitPage/images/\" + skillImg}></img>\r\n            <p>{skillName}</p>\r\n            <BeautyStars\r\n                value={star}\r\n                size={\"10px\"}\r\n                gap={\"5px\"}\r\n                inactiveColor={\"gray\"}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default SkillList","import \"../css/skills.scss\"\r\nimport SkillList from './SkillList';\r\nimport React from 'react'\r\n\r\nconst Skills = () => {\r\n    return (\r\n        <section className=\"slide\" id=\"skills\">\r\n                <div className=\"skillDiv\">\r\n                    <h1>Skills</h1>\r\n                    <h3 id=\"skillSub\"><span>Back-end</span></h3>\r\n\r\n                    <SkillList skillName=\"JAVA\" star=\"2\" skillImg=\"java.png\" />\r\n\r\n                    <SkillList skillName=\"NODE EXPRESS\" star=\"2\" skillImg=\"node.png\" />\r\n\r\n                    <SkillList skillName=\"JPA\" star=\"2\" skillImg=\"jpa.png\" />\r\n\r\n                    <SkillList skillName=\"SpringBoot\" star=\"2\" skillImg=\"spring.png\" />\r\n\r\n                    <SkillList skillName=\"Nginx\" star=\"2\" skillImg=\"nginx.png\" />\r\n                </div>\r\n                <div className=\"skillDiv\">\r\n                    <h3 id=\"skillSub\"><span>Front-end</span></h3>\r\n\r\n                    <SkillList skillName=\"CSS\" star=\"2\" skillImg=\"css.png\" />\r\n\r\n                    <SkillList skillName=\"html\" star=\"3\" skillImg=\"html5.png\" />\r\n\r\n                    <SkillList skillName=\"React\" star=\"3\" skillImg=\"react.png\" />\r\n\r\n                    <SkillList skillName=\"JavsScript\" star=\"3\" skillImg=\"js.png\" />\r\n\r\n                    <SkillList skillName=\"TypeScript\" star=\"2\" skillImg=\"ts.png\" />\r\n\r\n                    <SkillList skillName=\"Styled-Component\" star=\"2\" skillImg=\"styled.png\" />\r\n\r\n                    <SkillList skillName=\"Redux\" star=\"2\" skillImg=\"redux.png\" />\r\n\r\n                    <SkillList skillName=\"JQuery\" star=\"1\" skillImg=\"jquery.png\" />\r\n                </div>\r\n                <div className=\"skillDiv\">\r\n                    <h3 id=\"skillSub\"><span>ETC(DB,Tool...)</span></h3>\r\n\r\n                    <SkillList skillName=\"VScode\" star=\"3\" skillImg=\"vscode.png\" />\r\n\r\n                    <SkillList skillName=\"Travis CI\" star=\"2\" skillImg=\"travis.png\" />\r\n\r\n                    <SkillList skillName=\"Jenkins\" star=\"2\" skillImg=\"jenkins.png\" />\r\n\r\n                    <SkillList skillName=\"Docker\" star=\"1\" skillImg=\"docker.png\" />\r\n\r\n                    <SkillList skillName=\"Github\" star=\"3\" skillImg=\"github.png\" />\r\n\r\n                    <SkillList skillName=\"MySql\" star=\"3\" skillImg=\"mysql.png\" />\r\n\r\n                    <SkillList skillName=\"AWS\" star=\"2\" skillImg=\"aws.png\" />\r\n\r\n                    <SkillList skillName=\"GCP\" star=\"1\" skillImg=\"gcp.png\" />\r\n                </div>\r\n            </section>\r\n    )\r\n}\r\nexport default Skills\r\n","import emailjs from \"emailjs-com\"\r\nimport '../css/contact.scss'\r\n\r\nimport React from 'react'\r\n\r\nconst Contact = () => {\r\n    window.addEventListener('scroll', function () {\r\n        if (document.getElementById(\"aboutMe\").scrollHeight + document.getElementById(\"project\").scrollHeight + document.getElementById(\"skills\").scrollHeight + 200 < this.window.scrollY) {\r\n            document.getElementsByClassName(\"contact-form\")[0].style.visibility = \"visible\";\r\n            document.getElementsByClassName(\"contact-form\")[0].style.animation = \"fadein3 1.5s\"\r\n\r\n        }\r\n    })\r\n    const sendEmail = (e) => {\r\n        e.preventDefault();\r\n        if (document.getElementById(\"message\").value.length > 600) {\r\n            alert(\"글자 수가 초과되었습니다..\");\r\n            return;\r\n        }\r\n\r\n        emailjs.sendForm('tonymkcv', 'template_3YUmNpTi', e.target, 'user_tbMVZhZNhbJbK8s6CoGH3')\r\n            .then((result) => {\r\n                alert(\"성공적으로 전송되었습니다!\")\r\n            }, (error) => {\r\n                alert(\"전송에 실패했습니다.\")\r\n            });\r\n    }\r\n    const keyUp = () => {\r\n        var content;\r\n        content = document.getElementById(\"message\").value;\r\n\r\n        if (content.length > 600) {\r\n            document.getElementById(\"countSpan\").innerHTML = content.length;\r\n            document.getElementById(\"countSpan\").style.color = \"red\";\r\n        } else {\r\n            document.getElementById(\"countSpan\").innerHTML = content.length;\r\n            document.getElementById(\"countSpan\").style.color = \"black\";\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <section className=\"slide\" id=\"contact\" style={{ marginBottom: '70px' }}>\r\n                <div className=\"titleDiv\">\r\n                    <h3 id=\"titleSub\"><span style={{ fontSize: \"1rem\" }}>Contact</span></h3>\r\n                </div>\r\n                <form className=\"contact-form\" onSubmit={sendEmail}>\r\n                    <input type=\"hidden\" name=\"contact_number\" />\r\n                    <label>이름</label>\r\n                    <input required=\"required\" type=\"text\" name=\"user_name\" />\r\n                    <label>이메일</label>\r\n                    <input type=\"email\" name=\"user_email\" />\r\n                    <label>내용</label>\r\n                    <textarea required=\"required\" id=\"message\" name=\"message\" onKeyUp={keyUp} />\r\n                    <div id=\"countword\" style={{ fontSize: \"0.6rem\" }}>글자 수 <span id=\"countSpan\">0</span>/600</div>\r\n                    <input id=\"submitbtn\" type=\"submit\" value=\"보내기\" />\r\n\r\n                </form>\r\n\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\nexport default Contact","import React from 'react';\r\nimport './App.css';\r\nimport Header from './component/header';\r\nimport AboutMe from './component/aboutMe'\r\nimport Project from './component/project'\r\nimport Skills from './component/skills'\r\nimport Contact from './component/contact';\r\n\r\n\r\nfunction App() {\r\n  window.scrollTo(0,0)\r\n  function boxClick(){\r\n    document.getElementById(\"opacityBox\").style.display = \"none\";\r\n    document.getElementById(\"projectImg\").style.display = \"none\";\r\n    document.getElementById(\"close\").style.display = \"none\";\r\n    document.getElementsByClassName(\"mainSlide\")[0].getElementsByClassName(\"slick-arrow\")[0].style.display = \"block\";\r\n      document.getElementsByClassName(\"mainSlide\")[0].getElementsByClassName(\"slick-arrow\")[1].style.display = \"block\";\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <div id=\"opacityBox\" onClick={()=> boxClick()}> </div>\r\n      <p id=\"close\" onClick={()=>boxClick()} \r\n      style={{cursor : \"pointer\", zIndex : \"999\",display : \"none\",color : \"white\", position : \"fixed\", top : 0, right : \"20px\", margin : 0, fontSize : \"3rem\"}}>x</p>\r\n      <Header></Header>\r\n      <AboutMe></AboutMe>\r\n      <Project></Project>\r\n      <Skills></Skills>\r\n      <Contact></Contact>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing mainSec open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client mainSec are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'mainSec for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"slick-carousel/slick/slick.css\"; \r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}